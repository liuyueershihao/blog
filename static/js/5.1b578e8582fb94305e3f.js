webpackJsonp([5],{42:function(n,r,v){var p=v(0)(null,v(89),null,null);n.exports=p.exports},89:function(n,r){n.exports={render:function(){var n=this,r=n.$createElement;n._self._c;return n._m(0)},staticRenderFns:[function(){var n=this,r=n.$createElement,v=n._self._c||r;return v("div",[v("div",{staticClass:"title"},[n._v("\r\n        vue之内容插槽\r\n    ")]),n._v(" "),v("div",{staticClass:"tag"},[n._v("\r\n        vue\r\n    ")]),n._v(" "),v("summary",[n._v("组件（Component）是 Vue.js 最强大的功能之一。组件可以扩展 HTML 元素，封装可重用的代码。但是，很多时候，我们构建的组件不是一尘不变的，在不同的场合下，我们很多时候是希望组件大体相同，但是局部可以变化，这样才符合我们组件的重用。")]),n._v(" "),v("p",[n._v("很多时候，我们希望我们的组件可以用这样使用")]),n._v(" "),v("pre",[n._v("\r\n        <\\app>\r\n            <\\app-header><\\/app-header>\r\n            <\\app-body><\\/app-body>\r\n            <\\app-footer><\\/app-footer>\r\n        <\\/app>\r\n    ")]),n._v(" "),v("p",[n._v("在这里，我们定义了一个app的组件，并在父组件中引用了他。但是作为组件本身，他又在内部引用了另外三个组件:app-header、app-body、app-footer。这时候，我们在定义app组件本身的时候，我们并不确定这个组件一定完全是长这样的，或者长那样的，我们需要在使用的时候进行灵活的变通。所以我们需要使用slot。")]),n._v(" "),v("h3",[n._v("1. 单个slot")]),n._v(" "),v("p",[n._v("现在我们这样定义一个app组件")]),n._v(" "),v("pre",[n._v("\r\n        // app\r\n        <\\div>\r\n            <\\h1>我是app组件<\\/h1>\r\n            <\\slot>\r\n                当引用的时候没有父组件填充时，我才会显示\r\n            <\\/slot>\r\n        <\\/div>\r\n    ")]),n._v(" "),v("p",[v("strong",[n._v("1. ")]),n._v("当我们的父组件提供了内容时：")]),n._v(" "),v("pre",[n._v("\r\n        <\\div>\r\n            <\\h1>我是父组件<\\/h1>\r\n            <\\app>\r\n                <\\span>这里显示的是父组件的内容<\\/span>\r\n            <\\/app>\r\n        <\\/div>\r\n    ")]),n._v(" "),v("p",[n._v("以上引用会渲染成这样")]),n._v(" "),v("pre",[n._v("\r\n        <\\div>\r\n            <\\h1>我是父组件<\\/h1>\r\n            <\\div>\r\n                <\\h1>我是app组件<\\/h1>\r\n                <\\span>这里显示的是父组件的内容<\\/span>\r\n            <\\/div>\r\n        <\\/div>\r\n    ")]),n._v(" "),v("p",[v("strong",[n._v("2. ")]),n._v("当我们的父组件没有提供内容时候")]),n._v(" "),v("pre",[n._v("\r\n        <\\div>\r\n            <\\h1>我是父组件<\\/h1>\r\n            <\\app><\\/app>\r\n        <\\/div>\r\n    ")]),n._v(" "),v("p",[n._v("以上引用会渲染成这样")]),n._v(" "),v("pre",[n._v("\r\n        <\\div>\r\n            <\\h1>我是父组件<\\/h1>\r\n            <\\div>\r\n                <\\h1>我是app组件<\\/h1>\r\n                当引用的时候没有父组件填充时，我才会显示\r\n            <\\/div>\r\n        <\\/div>\r\n    ")]),n._v(" "),v("h3",[n._v("2. 具名slot")]),n._v(" "),v("p",[n._v("当有时候需求比较复杂的时候，一个组件内可能不止一个slot，那我们在引用的时候该如何将内容插入到我们需要的地方呢")]),n._v(" "),v("pre",[n._v('\r\n        // app\r\n        <\\div>\r\n            <\\h1>我是app组件<\\/h1>\r\n            <\\slot name="one">\r\n                这里是一个name为one的slot\r\n            <\\/slot>\r\n            <\\slot name="two">\r\n                这里是一个name为two的slot\r\n            <\\/slot>\r\n        <\\/div>\r\n\r\n        // 父组件引用\r\n        <\\div>\r\n            <\\h1>我是父组件<\\/h1>\r\n            <\\app>\r\n                <\\div slot="one">替换name为one的slot<\\/div>\r\n                <\\div slot="two">替换name为two的slot<\\/div>\r\n            <\\/app>\r\n        <\\/div>\r\n    ')]),n._v(" "),v("p",[n._v("渲染为")]),n._v(" "),v("pre",[n._v('\r\n        <\\div>\r\n            <\\h1>我是父组件<\\/h1>\r\n            <\\div>\r\n                <\\h1>我是app组件<\\/h1>\r\n                <\\div slot="one">替换name为one的slot<\\/div>\r\n                <\\div slot="two">替换name为two的slot<\\/div>\r\n            <\\/div>\r\n        <\\/div>\r\n    ')])])}]}}});
//# sourceMappingURL=5.1b578e8582fb94305e3f.js.map