{"version":3,"sources":["webpack:///static/js/5.1b578e8582fb94305e3f.js","webpack:///./src/views/articles/vue2.vue","webpack:///./src/views/articles/vue2.vue?2362"],"names":["webpackJsonp","42","module","exports","__webpack_require__","Component","89","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","staticClass","_v"],"mappings":"AAAAA,cAAc,IAERC,GACA,SAAUC,EAAQC,EAASC,GCHjC,GAAAC,GAAAD,EAAA,GAEA,KAEAA,EAAA,IAEA,KAEA,KAGAF,GAAAC,QAAAE,EAAAF,SDUMG,GACA,SAAUJ,EAAQC,GEtBxBD,EAAAC,SAAgBI,OAAA,WAAmB,GAAAC,GAAAC,KAAaC,EAAAF,EAAAG,cAA0BH,GAAAI,MAAAC,EAC1E,OAAAL,GAAAM,GAAA,IACCC,iBAAA,WAA+B,GAAAP,GAAAC,KAAaC,EAAAF,EAAAG,eAA0BE,EAAAL,EAAAI,MAAAC,IAAAH,CACvE,OAAAG,GAAA,OAAAA,EAAA,OACAG,YAAA,UACGR,EAAAS,GAAA,kCAAAT,EAAAS,GAAA,KAAAJ,EAAA,OACHG,YAAA,QACGR,EAAAS,GAAA,6BAAAT,EAAAS,GAAA,KAAAJ,EAAA,WAAAL,EAAAS,GAAA,kIAAAT,EAAAS,GAAA,KAAAJ,EAAA,KAAAL,EAAAS,GAAA,2BAAAT,EAAAS,GAAA,KAAAJ,EAAA,OAAAL,EAAAS,GAAA,wLAAAT,EAAAS,GAAA,KAAAJ,EAAA,KAAAL,EAAAS,GAAA,wKAAAT,EAAAS,GAAA,KAAAJ,EAAA,MAAAL,EAAAS,GAAA,eAAAT,EAAAS,GAAA,KAAAJ,EAAA,KAAAL,EAAAS,GAAA,qBAAAT,EAAAS,GAAA,KAAAJ,EAAA,OAAAL,EAAAS,GAAA,oMAAAT,EAAAS,GAAA,KAAAJ,EAAA,KAAAA,EAAA,UAAAL,EAAAS,GAAA,SAAAT,EAAAS,GAAA,oBAAAT,EAAAS,GAAA,KAAAJ,EAAA,OAAAL,EAAAS,GAAA,uLAAAT,EAAAS,GAAA,KAAAJ,EAAA,KAAAL,EAAAS,GAAA,gBAAAT,EAAAS,GAAA,KAAAJ,EAAA,OAAAL,EAAAS,GAAA,+NAAAT,EAAAS,GAAA,KAAAJ,EAAA,KAAAA,EAAA,UAAAL,EAAAS,GAAA,SAAAT,EAAAS,GAAA,qBAAAT,EAAAS,GAAA,KAAAJ,EAAA,OAAAL,EAAAS,GAAA,sHAAAT,EAAAS,GAAA,KAAAJ,EAAA,KAAAL,EAAAS,GAAA,gBAAAT,EAAAS,GAAA,KAAAJ,EAAA,OAAAL,EAAAS,GAAA,sNAAAT,EAAAS,GAAA,KAAAJ,EAAA,MAAAL,EAAAS,GAAA,eAAAT,EAAAS,GAAA,KAAAJ,EAAA,KAAAL,EAAAS,GAAA,8DAAAT,EAAAS,GAAA,KAAAJ,EAAA,OAAAL,EAAAS,GAAA,yjBAAAT,EAAAS,GAAA,KAAAJ,EAAA,KAAAL,EAAAS,GAAA,SAAAT,EAAAS,GAAA,KAAAJ,EAAA,OAAAL,EAAAS,GAAA","file":"static/js/5.1b578e8582fb94305e3f.js","sourcesContent":["webpackJsonp([5],{\n\n/***/ 42:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(0)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(89),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 89:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', [_c('div', {\n    staticClass: \"title\"\n  }, [_vm._v(\"\\r\\n        vue之内容插槽\\r\\n    \")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"tag\"\n  }, [_vm._v(\"\\r\\n        vue\\r\\n    \")]), _vm._v(\" \"), _c('summary', [_vm._v(\"组件（Component）是 Vue.js 最强大的功能之一。组件可以扩展 HTML 元素，封装可重用的代码。但是，很多时候，我们构建的组件不是一尘不变的，在不同的场合下，我们很多时候是希望组件大体相同，但是局部可以变化，这样才符合我们组件的重用。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"很多时候，我们希望我们的组件可以用这样使用\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\r\\n        <\\\\app>\\r\\n            <\\\\app-header><\\\\/app-header>\\r\\n            <\\\\app-body><\\\\/app-body>\\r\\n            <\\\\app-footer><\\\\/app-footer>\\r\\n        <\\\\/app>\\r\\n    \")]), _vm._v(\" \"), _c('p', [_vm._v(\"在这里，我们定义了一个app的组件，并在父组件中引用了他。但是作为组件本身，他又在内部引用了另外三个组件:app-header、app-body、app-footer。这时候，我们在定义app组件本身的时候，我们并不确定这个组件一定完全是长这样的，或者长那样的，我们需要在使用的时候进行灵活的变通。所以我们需要使用slot。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"1. 单个slot\")]), _vm._v(\" \"), _c('p', [_vm._v(\"现在我们这样定义一个app组件\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\r\\n        // app\\r\\n        <\\\\div>\\r\\n            <\\\\h1>我是app组件<\\\\/h1>\\r\\n            <\\\\slot>\\r\\n                当引用的时候没有父组件填充时，我才会显示\\r\\n            <\\\\/slot>\\r\\n        <\\\\/div>\\r\\n    \")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"1. \")]), _vm._v(\"当我们的父组件提供了内容时：\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\r\\n        <\\\\div>\\r\\n            <\\\\h1>我是父组件<\\\\/h1>\\r\\n            <\\\\app>\\r\\n                <\\\\span>这里显示的是父组件的内容<\\\\/span>\\r\\n            <\\\\/app>\\r\\n        <\\\\/div>\\r\\n    \")]), _vm._v(\" \"), _c('p', [_vm._v(\"以上引用会渲染成这样\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\r\\n        <\\\\div>\\r\\n            <\\\\h1>我是父组件<\\\\/h1>\\r\\n            <\\\\div>\\r\\n                <\\\\h1>我是app组件<\\\\/h1>\\r\\n                <\\\\span>这里显示的是父组件的内容<\\\\/span>\\r\\n            <\\\\/div>\\r\\n        <\\\\/div>\\r\\n    \")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"2. \")]), _vm._v(\"当我们的父组件没有提供内容时候\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\r\\n        <\\\\div>\\r\\n            <\\\\h1>我是父组件<\\\\/h1>\\r\\n            <\\\\app><\\\\/app>\\r\\n        <\\\\/div>\\r\\n    \")]), _vm._v(\" \"), _c('p', [_vm._v(\"以上引用会渲染成这样\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\r\\n        <\\\\div>\\r\\n            <\\\\h1>我是父组件<\\\\/h1>\\r\\n            <\\\\div>\\r\\n                <\\\\h1>我是app组件<\\\\/h1>\\r\\n                当引用的时候没有父组件填充时，我才会显示\\r\\n            <\\\\/div>\\r\\n        <\\\\/div>\\r\\n    \")]), _vm._v(\" \"), _c('h3', [_vm._v(\"2. 具名slot\")]), _vm._v(\" \"), _c('p', [_vm._v(\"当有时候需求比较复杂的时候，一个组件内可能不止一个slot，那我们在引用的时候该如何将内容插入到我们需要的地方呢\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\r\\n        // app\\r\\n        <\\\\div>\\r\\n            <\\\\h1>我是app组件<\\\\/h1>\\r\\n            <\\\\slot name=\\\"one\\\">\\r\\n                这里是一个name为one的slot\\r\\n            <\\\\/slot>\\r\\n            <\\\\slot name=\\\"two\\\">\\r\\n                这里是一个name为two的slot\\r\\n            <\\\\/slot>\\r\\n        <\\\\/div>\\r\\n\\r\\n        // 父组件引用\\r\\n        <\\\\div>\\r\\n            <\\\\h1>我是父组件<\\\\/h1>\\r\\n            <\\\\app>\\r\\n                <\\\\div slot=\\\"one\\\">替换name为one的slot<\\\\/div>\\r\\n                <\\\\div slot=\\\"two\\\">替换name为two的slot<\\\\/div>\\r\\n            <\\\\/app>\\r\\n        <\\\\/div>\\r\\n    \")]), _vm._v(\" \"), _c('p', [_vm._v(\"渲染为\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\r\\n        <\\\\div>\\r\\n            <\\\\h1>我是父组件<\\\\/h1>\\r\\n            <\\\\div>\\r\\n                <\\\\h1>我是app组件<\\\\/h1>\\r\\n                <\\\\div slot=\\\"one\\\">替换name为one的slot<\\\\/div>\\r\\n                <\\\\div slot=\\\"two\\\">替换name为two的slot<\\\\/div>\\r\\n            <\\\\/div>\\r\\n        <\\\\/div>\\r\\n    \")])])\n}]}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/5.1b578e8582fb94305e3f.js","var Component = require(\"!../../../node_modules/_vue-loader@11.3.4@vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../../../node_modules/_vue-loader@11.3.4@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-eda26bda\\\"}!../../../node_modules/_vue-loader@11.3.4@vue-loader/lib/selector?type=template&index=0!./vue2.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/articles/vue2.vue\n// module id = 42\n// module chunks = 5","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', [_c('div', {\n    staticClass: \"title\"\n  }, [_vm._v(\"\\r\\n        vue之内容插槽\\r\\n    \")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"tag\"\n  }, [_vm._v(\"\\r\\n        vue\\r\\n    \")]), _vm._v(\" \"), _c('summary', [_vm._v(\"组件（Component）是 Vue.js 最强大的功能之一。组件可以扩展 HTML 元素，封装可重用的代码。但是，很多时候，我们构建的组件不是一尘不变的，在不同的场合下，我们很多时候是希望组件大体相同，但是局部可以变化，这样才符合我们组件的重用。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"很多时候，我们希望我们的组件可以用这样使用\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\r\\n        <\\\\app>\\r\\n            <\\\\app-header><\\\\/app-header>\\r\\n            <\\\\app-body><\\\\/app-body>\\r\\n            <\\\\app-footer><\\\\/app-footer>\\r\\n        <\\\\/app>\\r\\n    \")]), _vm._v(\" \"), _c('p', [_vm._v(\"在这里，我们定义了一个app的组件，并在父组件中引用了他。但是作为组件本身，他又在内部引用了另外三个组件:app-header、app-body、app-footer。这时候，我们在定义app组件本身的时候，我们并不确定这个组件一定完全是长这样的，或者长那样的，我们需要在使用的时候进行灵活的变通。所以我们需要使用slot。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"1. 单个slot\")]), _vm._v(\" \"), _c('p', [_vm._v(\"现在我们这样定义一个app组件\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\r\\n        // app\\r\\n        <\\\\div>\\r\\n            <\\\\h1>我是app组件<\\\\/h1>\\r\\n            <\\\\slot>\\r\\n                当引用的时候没有父组件填充时，我才会显示\\r\\n            <\\\\/slot>\\r\\n        <\\\\/div>\\r\\n    \")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"1. \")]), _vm._v(\"当我们的父组件提供了内容时：\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\r\\n        <\\\\div>\\r\\n            <\\\\h1>我是父组件<\\\\/h1>\\r\\n            <\\\\app>\\r\\n                <\\\\span>这里显示的是父组件的内容<\\\\/span>\\r\\n            <\\\\/app>\\r\\n        <\\\\/div>\\r\\n    \")]), _vm._v(\" \"), _c('p', [_vm._v(\"以上引用会渲染成这样\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\r\\n        <\\\\div>\\r\\n            <\\\\h1>我是父组件<\\\\/h1>\\r\\n            <\\\\div>\\r\\n                <\\\\h1>我是app组件<\\\\/h1>\\r\\n                <\\\\span>这里显示的是父组件的内容<\\\\/span>\\r\\n            <\\\\/div>\\r\\n        <\\\\/div>\\r\\n    \")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"2. \")]), _vm._v(\"当我们的父组件没有提供内容时候\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\r\\n        <\\\\div>\\r\\n            <\\\\h1>我是父组件<\\\\/h1>\\r\\n            <\\\\app><\\\\/app>\\r\\n        <\\\\/div>\\r\\n    \")]), _vm._v(\" \"), _c('p', [_vm._v(\"以上引用会渲染成这样\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\r\\n        <\\\\div>\\r\\n            <\\\\h1>我是父组件<\\\\/h1>\\r\\n            <\\\\div>\\r\\n                <\\\\h1>我是app组件<\\\\/h1>\\r\\n                当引用的时候没有父组件填充时，我才会显示\\r\\n            <\\\\/div>\\r\\n        <\\\\/div>\\r\\n    \")]), _vm._v(\" \"), _c('h3', [_vm._v(\"2. 具名slot\")]), _vm._v(\" \"), _c('p', [_vm._v(\"当有时候需求比较复杂的时候，一个组件内可能不止一个slot，那我们在引用的时候该如何将内容插入到我们需要的地方呢\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\r\\n        // app\\r\\n        <\\\\div>\\r\\n            <\\\\h1>我是app组件<\\\\/h1>\\r\\n            <\\\\slot name=\\\"one\\\">\\r\\n                这里是一个name为one的slot\\r\\n            <\\\\/slot>\\r\\n            <\\\\slot name=\\\"two\\\">\\r\\n                这里是一个name为two的slot\\r\\n            <\\\\/slot>\\r\\n        <\\\\/div>\\r\\n\\r\\n        // 父组件引用\\r\\n        <\\\\div>\\r\\n            <\\\\h1>我是父组件<\\\\/h1>\\r\\n            <\\\\app>\\r\\n                <\\\\div slot=\\\"one\\\">替换name为one的slot<\\\\/div>\\r\\n                <\\\\div slot=\\\"two\\\">替换name为two的slot<\\\\/div>\\r\\n            <\\\\/app>\\r\\n        <\\\\/div>\\r\\n    \")]), _vm._v(\" \"), _c('p', [_vm._v(\"渲染为\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\r\\n        <\\\\div>\\r\\n            <\\\\h1>我是父组件<\\\\/h1>\\r\\n            <\\\\div>\\r\\n                <\\\\h1>我是app组件<\\\\/h1>\\r\\n                <\\\\div slot=\\\"one\\\">替换name为one的slot<\\\\/div>\\r\\n                <\\\\div slot=\\\"two\\\">替换name为two的slot<\\\\/div>\\r\\n            <\\\\/div>\\r\\n        <\\\\/div>\\r\\n    \")])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_vue-loader@11.3.4@vue-loader/lib/template-compiler?{\"id\":\"data-v-eda26bda\"}!./~/_vue-loader@11.3.4@vue-loader/lib/selector.js?type=template&index=0!./src/views/articles/vue2.vue\n// module id = 89\n// module chunks = 5"],"sourceRoot":""}