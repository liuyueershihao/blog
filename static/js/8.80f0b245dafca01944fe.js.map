{"version":3,"sources":["webpack:///static/js/8.80f0b245dafca01944fe.js","webpack:///./src/views/articles/sass.vue","webpack:///./src/views/articles/sass.vue?f6c6"],"names":["webpackJsonp","39","module","exports","__webpack_require__","Component","79","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","staticClass","_v"],"mappings":"AAAAA,cAAc,IAERC,GACA,SAAUC,EAAQC,EAASC,GCHjC,GAAAC,GAAAD,EAAA,GAEA,KAEAA,EAAA,IAEA,KAEA,KAGAF,GAAAC,QAAAE,EAAAF,SDUMG,GACA,SAAUJ,EAAQC,GEtBxBD,EAAAC,SAAgBI,OAAA,WAAmB,GAAAC,GAAAC,KAAaC,EAAAF,EAAAG,cAA0BH,GAAAI,MAAAC,EAC1E,OAAAL,GAAAM,GAAA,IACCC,iBAAA,WAA+B,GAAAP,GAAAC,KAAaC,EAAAF,EAAAG,eAA0BE,EAAAL,EAAAI,MAAAC,IAAAH,CACvE,OAAAG,GAAA,OAAAA,EAAA,OACAG,YAAA,UACGR,EAAAS,GAAA,cAAAT,EAAAS,GAAA,KAAAJ,EAAA,OACHG,YAAA,QACGR,EAAAS,GAAA,UAAAT,EAAAS,GAAA,KAAAJ,EAAA,WAAAL,EAAAS,GAAA,kJAAAT,EAAAS,GAAA,KAAAJ,EAAA,MAAAL,EAAAS,GAAA,WAAAT,EAAAS,GAAA,KAAAJ,EAAA,KAAAL,EAAAS,GAAA,kEAAAT,EAAAS,GAAA,KAAAJ,EAAA,OAAAL,EAAAS,GAAA,0FAAmcT,EAAAS,GAAA,KAAAJ,EAAA,MAAAL,EAAAS,GAAA,WAAAT,EAAAS,GAAA,KAAAJ,EAAA,KAAAL,EAAAS,GAAA,+CAAAT,EAAAS,GAAA,KAAAJ,EAAA,OAAAL,EAAAS,GAAA,+VAAsfT,EAAAS,GAAA,KAAAJ,EAAA,MAAAL,EAAAS,GAAA,WAAAT,EAAAS,GAAA,KAAAJ,EAAA,KAAAL,EAAAS,GAAA,sJAAAT,EAAAS,GAAA,KAAAJ,EAAA,MAAAL,EAAAS,GAAA,eAAAT,EAAAS,GAAA,KAAAJ,EAAA,KAAAL,EAAAS,GAAA,wIAAAT,EAAAS,GAAA,KAAAJ,EAAA,KAAAL,EAAAS,GAAA,qEAAAT,EAAAS,GAAA,KAAAJ,EAAA,OAAAL,EAAAS,GAAA,uhBAA4kCT,EAAAS,GAAA,KAAAJ,EAAA,MAAAL,EAAAS,GAAA,YAAAT,EAAAS,GAAA,KAAAJ,EAAA,KAAAL,EAAAS,GAAA,sGAAAT,EAAAS,GAAA,KAAAJ,EAAA,OAAAL,EAAAS,GAAA,qRAAoeT,EAAAS,GAAA,KAAAJ,EAAA,KAAAL,EAAAS,GAAA,sGAAAT,EAAAS,GAAA,KAAAJ,EAAA,MAAAL,EAAAS,GAAA,WAAAT,EAAAS,GAAA,KAAAJ,EAAA,KAAAL,EAAAS,GAAA,+BAAAT,EAAAS,GAAA,KAAAJ,EAAA,OAAAL,EAAAS,GAAA,yaAAorBT,EAAAS,GAAA,KAAAJ,EAAA,KAAAL,EAAAS,GAAA,UAAAT,EAAAS,GAAA,KAAAJ,EAAA,OAAAL,EAAAS,GAAA,2WAAmbT,EAAAS,GAAA,KAAAJ,EAAA,MAAAL,EAAAS,GAAA,YAAAT,EAAAS,GAAA,KAAAJ,EAAA,KAAAL,EAAAS,GAAA,uBAAAT,EAAAS,GAAA,KAAAJ,EAAA,OAAAL,EAAAS,GAAA,2RAA+ZT,EAAAS,GAAA,KAAAJ,EAAA,KAAAL,EAAAS,GAAA,UAAAT,EAAAS,GAAA,KAAAJ,EAAA,OAAAL,EAAAS,GAAA","file":"static/js/8.80f0b245dafca01944fe.js","sourcesContent":["webpackJsonp([8],{\n\n/***/ 39:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(0)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(79),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 79:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', [_c('div', {\n    staticClass: \"title\"\n  }, [_vm._v(\"sass快速入门\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"tag\"\n  }, [_vm._v(\"sass\")]), _vm._v(\" \"), _c('summary', [_vm._v(\"Sass 是对 CSS 的扩展，让 CSS 语言更强大、优雅。 它允许你使用变量、嵌套规则、 mixins、导入等众多功能， 并且完全兼容 CSS 语法。 Sass 有助于保持大型样式表结构良好， 同时也让你能够快速开始小型项目， 特别是在搭配 Compass 样式库一同使用时。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"1. 变量\")]), _vm._v(\" \"), _c('p', [_vm._v(\"\\n        sass使用$标识符作为变量的识别。变量可以储存颜色、字体等任何你想要重复利用的css值\\n    \")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\n        $color: #FFF;\\n        body {\\n            color: $color;\\n        }\\n    \")]), _vm._v(\" \"), _c('h3', [_vm._v(\"2. 嵌套\")]), _vm._v(\" \"), _c('p', [_vm._v(\"嵌套规则允许css像html一样拥有层级逻辑，但是过重的嵌套通常被认为是不好的体验\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\n        nav {\\n            ul {\\n                margin: 0;\\n                padding: 0;\\n                list-style: none;\\n            }\\n\\n            li { display: inline-block; }\\n\\n            a {\\n                display: block;\\n                padding: 6px 12px;\\n                text-decoration: none;\\n            }\\n        }\\n    \")]), _vm._v(\" \"), _c('h3', [_vm._v(\"3. 局部\")]), _vm._v(\" \"), _c('p', [_vm._v(\"\\n        我们可以将css文件分割为多个不同的sass片段，并且这样会使得你的代码具有更好的维护性。我们可以用 _ 开头作为标识，比如 _partical.scss ,当你看到这样的标识的时候，说明这部分未见应该被打包入css中。 sass片段使用@import指令\\n    \")]), _vm._v(\" \"), _c('h3', [_vm._v(\"4. import\")]), _vm._v(\" \"), _c('p', [_vm._v(\"你也可以用@import引入css片段来分割css代码，作为不同的块。但是这样做有一个坏处就是会增加http请求。sass的@import也是建立在css的@import上，但是却减少了http请求。因为sass文件最终会打包成为一个css文件在浏览器端解析。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"现在你有两个文件： _reset.scss 和 base.scss。我们希望将 _reset.scss引入base.scss中\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\n        // _reset.scss\\n        html,\\n        body,\\n        ul,\\n        ol {\\n        margin: 0;\\n        padding: 0;\\n        }\\n\\n        // base.scss\\n        @import 'reset';\\n\\n        body {\\n          font: 100% Helvetica, sans-serif;\\n          background-color: #efefef;\\n        }\\n\\n        // 最后css文件\\n        html, body, ul, ol {\\n            margin: 0;\\n            padding: 0;\\n        }\\n\\n        body {\\n            font: 100% Helvetica, sans-serif;\\n            background-color: #efefef;\\n        }\\n    \")]), _vm._v(\" \"), _c('h3', [_vm._v(\"5. 混合器\")]), _vm._v(\" \"), _c('p', [_vm._v(\"很多时候，我们的css代码都比较乏味，尤其是css3中有比较多的属性都需要写浏览器前缀，这是一个比较枯燥的事。这时候我们可以选择使用混合器，并且可以向混合器中传入参数，使得混合器变得更加灵活。\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\n        @mixin border-radius($radius) {\\n            -webkit-border-radius: $radius;\\n            -moz-border-radius: $radius;\\n            -ms-border-radius: $radius;\\n            border-radius: $radius;\\n        }\\n        .box { @include border-radius(10px); }\\n    \")]), _vm._v(\" \"), _c('p', [_vm._v(\"创建混合器：首先，我们使用@mixin指令，其次，为这个混合器取名，方便在其他地方调用(比如我们这里的border-radius)，然后，可以向混合器传递参数，最后在我们需要的地方调用就可以了\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"6. 继承\")]), _vm._v(\" \"), _c('p', [_vm._v(\"我们可以选择将我们的样式选择去继承另一个样式的属性\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\n        .message {\\n            border: 1px solid #ccc;\\n            padding: 10px;\\n            color: #333;\\n        }\\n\\n        .success {\\n            @extend .message;\\n            border-color: green;\\n        }\\n\\n        .error {\\n            @extend .message;\\n            border-color: red;\\n        }\\n\\n        .warning {\\n            @extend .message;\\n            border-color: yellow;\\n        }\\n    \")]), _vm._v(\" \"), _c('p', [_vm._v(\"解析后：\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\n        .message, .success, .error, .warning {\\n            border: 1px solid #cccccc;\\n            padding: 10px;\\n            color: #333;\\n        }\\n\\n        .success {\\n            border-color: green;\\n        }\\n\\n        .error {\\n            border-color: red;\\n        }\\n\\n        .warning {\\n            border-color: yellow;\\n        }\\n    \")]), _vm._v(\" \"), _c('h3', [_vm._v(\"7. 运算符\")]), _vm._v(\" \"), _c('p', [_vm._v(\"sass文件支持简单的加减乘除运算\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\n        .container { width: 100%; }\\n\\n        article[role=\\\"main\\\"] {\\n            float: left;\\n            width: 600px / 960px * 100%;\\n        }\\n\\n        aside[role=\\\"complimentary\\\"] {\\n            float: right;\\n            width: 300px / 960px * 100%;\\n        }\\n    \")]), _vm._v(\" \"), _c('p', [_vm._v(\"解析后:\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\n        .container {\\n            width: 100%;\\n        }\\n\\n        article[role=\\\"main\\\"] {\\n            float: left;\\n            width: 62.5%;\\n        }\\n\\n        aside[role=\\\"complimentary\\\"] {\\n            float: right;\\n            width: 31.25%;\\n        }\\n    \")])])\n}]}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/8.80f0b245dafca01944fe.js","var Component = require(\"!../../../node_modules/_vue-loader@11.3.4@vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../../../node_modules/_vue-loader@11.3.4@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-4b0672d5\\\"}!../../../node_modules/_vue-loader@11.3.4@vue-loader/lib/selector?type=template&index=0!./sass.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/articles/sass.vue\n// module id = 39\n// module chunks = 8","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', [_c('div', {\n    staticClass: \"title\"\n  }, [_vm._v(\"sass快速入门\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"tag\"\n  }, [_vm._v(\"sass\")]), _vm._v(\" \"), _c('summary', [_vm._v(\"Sass 是对 CSS 的扩展，让 CSS 语言更强大、优雅。 它允许你使用变量、嵌套规则、 mixins、导入等众多功能， 并且完全兼容 CSS 语法。 Sass 有助于保持大型样式表结构良好， 同时也让你能够快速开始小型项目， 特别是在搭配 Compass 样式库一同使用时。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"1. 变量\")]), _vm._v(\" \"), _c('p', [_vm._v(\"\\n        sass使用$标识符作为变量的识别。变量可以储存颜色、字体等任何你想要重复利用的css值\\n    \")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\n        $color: #FFF;\\n        body {\\n            color: $color;\\n        }\\n    \")]), _vm._v(\" \"), _c('h3', [_vm._v(\"2. 嵌套\")]), _vm._v(\" \"), _c('p', [_vm._v(\"嵌套规则允许css像html一样拥有层级逻辑，但是过重的嵌套通常被认为是不好的体验\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\n        nav {\\n            ul {\\n                margin: 0;\\n                padding: 0;\\n                list-style: none;\\n            }\\n\\n            li { display: inline-block; }\\n\\n            a {\\n                display: block;\\n                padding: 6px 12px;\\n                text-decoration: none;\\n            }\\n        }\\n    \")]), _vm._v(\" \"), _c('h3', [_vm._v(\"3. 局部\")]), _vm._v(\" \"), _c('p', [_vm._v(\"\\n        我们可以将css文件分割为多个不同的sass片段，并且这样会使得你的代码具有更好的维护性。我们可以用 _ 开头作为标识，比如 _partical.scss ,当你看到这样的标识的时候，说明这部分未见应该被打包入css中。 sass片段使用@import指令\\n    \")]), _vm._v(\" \"), _c('h3', [_vm._v(\"4. import\")]), _vm._v(\" \"), _c('p', [_vm._v(\"你也可以用@import引入css片段来分割css代码，作为不同的块。但是这样做有一个坏处就是会增加http请求。sass的@import也是建立在css的@import上，但是却减少了http请求。因为sass文件最终会打包成为一个css文件在浏览器端解析。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"现在你有两个文件： _reset.scss 和 base.scss。我们希望将 _reset.scss引入base.scss中\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\n        // _reset.scss\\n        html,\\n        body,\\n        ul,\\n        ol {\\n        margin: 0;\\n        padding: 0;\\n        }\\n\\n        // base.scss\\n        @import 'reset';\\n\\n        body {\\n          font: 100% Helvetica, sans-serif;\\n          background-color: #efefef;\\n        }\\n\\n        // 最后css文件\\n        html, body, ul, ol {\\n            margin: 0;\\n            padding: 0;\\n        }\\n\\n        body {\\n            font: 100% Helvetica, sans-serif;\\n            background-color: #efefef;\\n        }\\n    \")]), _vm._v(\" \"), _c('h3', [_vm._v(\"5. 混合器\")]), _vm._v(\" \"), _c('p', [_vm._v(\"很多时候，我们的css代码都比较乏味，尤其是css3中有比较多的属性都需要写浏览器前缀，这是一个比较枯燥的事。这时候我们可以选择使用混合器，并且可以向混合器中传入参数，使得混合器变得更加灵活。\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\n        @mixin border-radius($radius) {\\n            -webkit-border-radius: $radius;\\n            -moz-border-radius: $radius;\\n            -ms-border-radius: $radius;\\n            border-radius: $radius;\\n        }\\n        .box { @include border-radius(10px); }\\n    \")]), _vm._v(\" \"), _c('p', [_vm._v(\"创建混合器：首先，我们使用@mixin指令，其次，为这个混合器取名，方便在其他地方调用(比如我们这里的border-radius)，然后，可以向混合器传递参数，最后在我们需要的地方调用就可以了\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"6. 继承\")]), _vm._v(\" \"), _c('p', [_vm._v(\"我们可以选择将我们的样式选择去继承另一个样式的属性\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\n        .message {\\n            border: 1px solid #ccc;\\n            padding: 10px;\\n            color: #333;\\n        }\\n\\n        .success {\\n            @extend .message;\\n            border-color: green;\\n        }\\n\\n        .error {\\n            @extend .message;\\n            border-color: red;\\n        }\\n\\n        .warning {\\n            @extend .message;\\n            border-color: yellow;\\n        }\\n    \")]), _vm._v(\" \"), _c('p', [_vm._v(\"解析后：\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\n        .message, .success, .error, .warning {\\n            border: 1px solid #cccccc;\\n            padding: 10px;\\n            color: #333;\\n        }\\n\\n        .success {\\n            border-color: green;\\n        }\\n\\n        .error {\\n            border-color: red;\\n        }\\n\\n        .warning {\\n            border-color: yellow;\\n        }\\n    \")]), _vm._v(\" \"), _c('h3', [_vm._v(\"7. 运算符\")]), _vm._v(\" \"), _c('p', [_vm._v(\"sass文件支持简单的加减乘除运算\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\n        .container { width: 100%; }\\n\\n        article[role=\\\"main\\\"] {\\n            float: left;\\n            width: 600px / 960px * 100%;\\n        }\\n\\n        aside[role=\\\"complimentary\\\"] {\\n            float: right;\\n            width: 300px / 960px * 100%;\\n        }\\n    \")]), _vm._v(\" \"), _c('p', [_vm._v(\"解析后:\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\n        .container {\\n            width: 100%;\\n        }\\n\\n        article[role=\\\"main\\\"] {\\n            float: left;\\n            width: 62.5%;\\n        }\\n\\n        aside[role=\\\"complimentary\\\"] {\\n            float: right;\\n            width: 31.25%;\\n        }\\n    \")])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_vue-loader@11.3.4@vue-loader/lib/template-compiler?{\"id\":\"data-v-4b0672d5\"}!./~/_vue-loader@11.3.4@vue-loader/lib/selector.js?type=template&index=0!./src/views/articles/sass.vue\n// module id = 79\n// module chunks = 8"],"sourceRoot":""}