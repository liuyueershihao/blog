{"version":3,"sources":["webpack:///static/js/14.ead7d64dc9d24d8ee81a.js","webpack:///./src/views/articles/interview.vue","webpack:///./src/views/articles/interview.vue?3e11"],"names":["webpackJsonp","32","module","exports","__webpack_require__","Component","80","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","staticClass","_v"],"mappings":"AAAAA,cAAc,KAERC,GACA,SAAUC,EAAQC,EAASC,GCHjC,GAAAC,GAAAD,EAAA,GAEA,KAEAA,EAAA,IAEA,KAEA,KAGAF,GAAAC,QAAAE,EAAAF,SDUMG,GACA,SAAUJ,EAAQC,GEtBxBD,EAAAC,SAAgBI,OAAA,WAAmB,GAAAC,GAAAC,KAAaC,EAAAF,EAAAG,cAA0BH,GAAAI,MAAAC,EAC1E,OAAAL,GAAAM,GAAA,IACCC,iBAAA,WAA+B,GAAAP,GAAAC,KAAaC,EAAAF,EAAAG,eAA0BE,EAAAL,EAAAI,MAAAC,IAAAH,CACvE,OAAAG,GAAA,OAAAA,EAAA,OACAG,YAAA,UACGR,EAAAS,GAAA,aAAAT,EAAAS,GAAA,KAAAJ,EAAA,OACHG,YAAA,QACGR,EAAAS,GAAA,QAAAT,EAAAS,GAAA,KAAAJ,EAAA,WAAAL,EAAAS,GAAA,0BAAAT,EAAAS,GAAA,KAAAJ,EAAA,MAAAL,EAAAS,GAAA,WAAAT,EAAAS,GAAA,KAAAJ,EAAA,KAAAA,EAAA,UAAAL,EAAAS,GAAA,kBAAAT,EAAAS,GAAA,KAAAJ,EAAA,KAAAL,EAAAS,GAAA,sCAAAT,EAAAS,GAAA,KAAAJ,EAAA,KAAAA,EAAA,UAAAL,EAAAS,GAAA,gBAAAT,EAAAS,GAAA,KAAAJ,EAAA,KAAAL,EAAAS,GAAA,kBAAAT,EAAAS,GAAA,KAAAJ,EAAA,KAAAL,EAAAS,GAAA,qBAAAT,EAAAS,GAAA,KAAAJ,EAAA,KAAAL,EAAAS,GAAA,mHAAAT,EAAAS,GAAA,KAAAJ,EAAA,KAAAL,EAAAS,GAAA,yEAAAT,EAAAS,GAAA,KAAAJ,EAAA,OAAAL,EAAAS,GAAA,+mBAAgxCT,EAAAS,GAAA,KAAAJ,EAAA,MAAAL,EAAAS,GAAA,eAAAT,EAAAS,GAAA,KAAAJ,EAAA,MAAAL,EAAAS,GAAA,mBAAAT,EAAAS,GAAA,KAAAJ,EAAA,MAAAL,EAAAS,GAAA,aAAAT,EAAAS,GAAA,KAAAJ,EAAA,OAAAL,EAAAS,GAAA,iUAA0fT,EAAAS,GAAA,KAAAJ,EAAA,MAAAL,EAAAS,GAAA,aAAAT,EAAAS,GAAA,KAAAJ,EAAA,OAAAL,EAAAS,GAAA,sjBAAkoBT,EAAAS,GAAA,KAAAJ,EAAA,MAAAL,EAAAS,GAAA,kBAAAT,EAAAS,GAAA,KAAAJ,EAAA,KAAAL,EAAAS,GAAA,gBAAAT,EAAAS,GAAA,KAAAJ,EAAA,OAAAL,EAAAS,GAAA,udAAAT,EAAAS,GAAA,KAAAJ,EAAA,KAAAL,EAAAS,GAAA,SAAAT,EAAAS,GAAA,KAAAJ,EAAA,OAAAL,EAAAS,GAAA","file":"static/js/14.ead7d64dc9d24d8ee81a.js","sourcesContent":["webpackJsonp([14],{\n\n/***/ 32:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(0)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(80),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 80:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', [_c('div', {\n    staticClass: \"title\"\n  }, [_vm._v(\"前端面试(一)\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"tag\"\n  }, [_vm._v(\"其他\")]), _vm._v(\" \"), _c('summary', [_vm._v(\"最近准备去面试，所以总结一下常见的面试题\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"1. 闭包\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"1.1 什么是闭包?\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"闭包就是一个通过返回一个函数的形式来私有调用函数内部变量的函数。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"1.2 闭包特性\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"(1) 外部读取内部变量\")]), _vm._v(\" \"), _c('p', [_vm._v(\"(2) 让变量一直保存在内存中\")]), _vm._v(\" \"), _c('p', [_vm._v(\"第一个就是闭包的基本概念，没啥好说的。至于第二个，简单来说，普通函数在执行完后会被js垃圾回收机制回收归堆。但是对于闭包，在外部函数执行完后，还存在着内部函数对外部函数变量的引用，这在js中是无法被垃圾回收机制回收的。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"所以闭包也存在了一个很明显的缺点：就是容易导致内存泄露。当我们在应用闭包时需要谨慎。当然也有一些可以解决内存泄露的办法，这里不多解释。\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\r\\n        var name = \\\"The Window\\\";\\r\\n    　　var object = {\\r\\n    　　　　name : \\\"My Object\\\",\\r\\n    　　　　getNameFunc : function(){\\r\\n    　　　　　　return function(){\\r\\n    　　　　　　　　return this.name;\\r\\n    　　　　　　};\\r\\n    　　　　}\\r\\n    　　};\\r\\n    　　alert(object.getNameFunc()()); // The Window\\r\\n\\r\\n        var name = \\\"The Window\\\";\\r\\n    　　var object = {\\r\\n    　　　　name : \\\"My Object\\\",\\r\\n    　　　　getNameFunc : function(){\\r\\n    　　　　　　var that = this;\\r\\n    　　　　　　return function(){\\r\\n    　　　　　　　　return that.name;\\r\\n    　　　　　　};\\r\\n    　　　　}\\r\\n    　　};\\r\\n    　　alert(object.getNameFunc()()); // MY Object\\r\\n    \")]), _vm._v(\" \"), _c('h3', [_vm._v(\"2. AJAX原理\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"3. get和post区别\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"4. 数组去重\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\r\\n    function noRepeatArray(arr) {\\r\\n        var obj = {}, newArr = []\\r\\n        for(var i = 0, len = arr.length; i < len; i++) {\\r\\n            if (!obj[arr[i]]){\\r\\n                obj[arr[i]] = -1\\r\\n                newArr.push(arr[i])\\r\\n            }\\r\\n        }\\r\\n        return newArr\\r\\n    }\\r\\n    \")]), _vm._v(\" \"), _c('h3', [_vm._v(\"5. 快排算法\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\r\\n    function quickSort(arr) {\\r\\n        if (arr.length <= 1) {\\r\\n            return arr\\r\\n        }\\r\\n        var left = [], right = [];\\r\\n        var flag_index = Math.floor(arr.length / 2)\\r\\n        var flag = arr.splice(flag_index, 1)[0]\\r\\n        for (var i = 0, len = arr.length; i < len; i++) {\\r\\n            if (arr[i] > flag) {\\r\\n                right.push(arr[i])\\r\\n            } else {\\r\\n                left.push(arr[i])\\r\\n            }\\r\\n        }\\r\\n        return quickSort(left).concat([flag], quickSort(right))\\r\\n    }\\r\\n    \")]), _vm._v(\" \"), _c('h3', [_vm._v(\"6. lazyman实现\")]), _vm._v(\" \"), _c('p', [_vm._v(\"需要实现下面的功能:\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\r\\n    LazyMan('Hank')\\r\\n    // Hi, This is Hank\\r\\n    LazyMan('Hank').sleep(10).eat('dinner')\\r\\n    // Hi, This is Hank\\r\\n    // 等待10s...\\r\\n    // Wake up after 10s\\r\\n    // eat dinner\\r\\n    LazyMan('Hank').eat('dinner').eat(supper)\\r\\n    // Hi, This is Hank\\r\\n    // eat dinner\\r\\n    // eat supper\\r\\n    LazyMan(\\\"Hank\\\").sleepFirst(5).eat(\\\"supper\\\")\\r\\n    // 等待5s...\\r\\n    // Wake up after 5\\r\\n    // Hi This is Hank!\\r\\n    // Eat supper\\r\\n    \")]), _vm._v(\" \"), _c('p', [_vm._v(\"实现:\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\r\\n    var _LazyMan = function(name) {\\r\\n        this.tasks = []\\r\\n        var self = this\\r\\n        var fn = function() {\\r\\n            console.log('Hi, This is ' + name)\\r\\n            self.next()\\r\\n        }\\r\\n        this.tasks.push(fn)\\r\\n        setTimeout(function() {\\r\\n            self.next()\\r\\n        }, 0)\\r\\n    }\\r\\n    _LazyMan.prototype.next = _LazyMan.prototype.next || function() {\\r\\n        var fn = this.tasks.shift()\\r\\n        fn && fn()\\r\\n    }\\r\\n    _LazyMan.prototype.eat = _LazyMan.prototype.eat || function(str) {\\r\\n        var self = this\\r\\n        var fn = function() {\\r\\n            setTimeout(function() {\\r\\n                console.log('eat ' + str)\\r\\n                self.next()\\r\\n            }, 0)\\r\\n        }\\r\\n        this.tasks.push(fn)\\r\\n        return this\\r\\n    }\\r\\n    _LazyMan.prototype.sleep = _LazyMan.prototype.sleep || function(time) {\\r\\n        var self = this\\r\\n        var fn = function() {\\r\\n            setTimeout(function() {\\r\\n                console.log('wake up after ' + time + 's...')\\r\\n                self.next()\\r\\n            }, time * 1000)\\r\\n        }\\r\\n        this.tasks.push(fn)\\r\\n        return this\\r\\n    }\\r\\n    _LazyMan.prototype.sleepFirst = _LazyMan.prototype.sleepFirst || function(time) {\\r\\n        var self = this\\r\\n        var fn = function() {\\r\\n            setTimeout(function() {\\r\\n                console.log('wake up after ' + time +'s...')\\r\\n                self.next()\\r\\n            }, time * 1000)\\r\\n        }\\r\\n        this.tasks.unshift(fn)\\r\\n        return this\\r\\n    }\\r\\n    var LazyMan = function(name) {\\r\\n        return new _LazyMan(name)\\r\\n    }\\r\\n    \")])])\n}]}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/14.ead7d64dc9d24d8ee81a.js","var Component = require(\"!../../../node_modules/_vue-loader@11.3.4@vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../../../node_modules/_vue-loader@11.3.4@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-5311f22c\\\"}!../../../node_modules/_vue-loader@11.3.4@vue-loader/lib/selector?type=template&index=0!./interview.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/articles/interview.vue\n// module id = 32\n// module chunks = 14","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', [_c('div', {\n    staticClass: \"title\"\n  }, [_vm._v(\"前端面试(一)\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"tag\"\n  }, [_vm._v(\"其他\")]), _vm._v(\" \"), _c('summary', [_vm._v(\"最近准备去面试，所以总结一下常见的面试题\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"1. 闭包\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"1.1 什么是闭包?\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"闭包就是一个通过返回一个函数的形式来私有调用函数内部变量的函数。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"1.2 闭包特性\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"(1) 外部读取内部变量\")]), _vm._v(\" \"), _c('p', [_vm._v(\"(2) 让变量一直保存在内存中\")]), _vm._v(\" \"), _c('p', [_vm._v(\"第一个就是闭包的基本概念，没啥好说的。至于第二个，简单来说，普通函数在执行完后会被js垃圾回收机制回收归堆。但是对于闭包，在外部函数执行完后，还存在着内部函数对外部函数变量的引用，这在js中是无法被垃圾回收机制回收的。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"所以闭包也存在了一个很明显的缺点：就是容易导致内存泄露。当我们在应用闭包时需要谨慎。当然也有一些可以解决内存泄露的办法，这里不多解释。\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\r\\n        var name = \\\"The Window\\\";\\r\\n    　　var object = {\\r\\n    　　　　name : \\\"My Object\\\",\\r\\n    　　　　getNameFunc : function(){\\r\\n    　　　　　　return function(){\\r\\n    　　　　　　　　return this.name;\\r\\n    　　　　　　};\\r\\n    　　　　}\\r\\n    　　};\\r\\n    　　alert(object.getNameFunc()()); // The Window\\r\\n\\r\\n        var name = \\\"The Window\\\";\\r\\n    　　var object = {\\r\\n    　　　　name : \\\"My Object\\\",\\r\\n    　　　　getNameFunc : function(){\\r\\n    　　　　　　var that = this;\\r\\n    　　　　　　return function(){\\r\\n    　　　　　　　　return that.name;\\r\\n    　　　　　　};\\r\\n    　　　　}\\r\\n    　　};\\r\\n    　　alert(object.getNameFunc()()); // MY Object\\r\\n    \")]), _vm._v(\" \"), _c('h3', [_vm._v(\"2. AJAX原理\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"3. get和post区别\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"4. 数组去重\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\r\\n    function noRepeatArray(arr) {\\r\\n        var obj = {}, newArr = []\\r\\n        for(var i = 0, len = arr.length; i < len; i++) {\\r\\n            if (!obj[arr[i]]){\\r\\n                obj[arr[i]] = -1\\r\\n                newArr.push(arr[i])\\r\\n            }\\r\\n        }\\r\\n        return newArr\\r\\n    }\\r\\n    \")]), _vm._v(\" \"), _c('h3', [_vm._v(\"5. 快排算法\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\r\\n    function quickSort(arr) {\\r\\n        if (arr.length <= 1) {\\r\\n            return arr\\r\\n        }\\r\\n        var left = [], right = [];\\r\\n        var flag_index = Math.floor(arr.length / 2)\\r\\n        var flag = arr.splice(flag_index, 1)[0]\\r\\n        for (var i = 0, len = arr.length; i < len; i++) {\\r\\n            if (arr[i] > flag) {\\r\\n                right.push(arr[i])\\r\\n            } else {\\r\\n                left.push(arr[i])\\r\\n            }\\r\\n        }\\r\\n        return quickSort(left).concat([flag], quickSort(right))\\r\\n    }\\r\\n    \")]), _vm._v(\" \"), _c('h3', [_vm._v(\"6. lazyman实现\")]), _vm._v(\" \"), _c('p', [_vm._v(\"需要实现下面的功能:\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\r\\n    LazyMan('Hank')\\r\\n    // Hi, This is Hank\\r\\n    LazyMan('Hank').sleep(10).eat('dinner')\\r\\n    // Hi, This is Hank\\r\\n    // 等待10s...\\r\\n    // Wake up after 10s\\r\\n    // eat dinner\\r\\n    LazyMan('Hank').eat('dinner').eat(supper)\\r\\n    // Hi, This is Hank\\r\\n    // eat dinner\\r\\n    // eat supper\\r\\n    LazyMan(\\\"Hank\\\").sleepFirst(5).eat(\\\"supper\\\")\\r\\n    // 等待5s...\\r\\n    // Wake up after 5\\r\\n    // Hi This is Hank!\\r\\n    // Eat supper\\r\\n    \")]), _vm._v(\" \"), _c('p', [_vm._v(\"实现:\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\r\\n    var _LazyMan = function(name) {\\r\\n        this.tasks = []\\r\\n        var self = this\\r\\n        var fn = function() {\\r\\n            console.log('Hi, This is ' + name)\\r\\n            self.next()\\r\\n        }\\r\\n        this.tasks.push(fn)\\r\\n        setTimeout(function() {\\r\\n            self.next()\\r\\n        }, 0)\\r\\n    }\\r\\n    _LazyMan.prototype.next = _LazyMan.prototype.next || function() {\\r\\n        var fn = this.tasks.shift()\\r\\n        fn && fn()\\r\\n    }\\r\\n    _LazyMan.prototype.eat = _LazyMan.prototype.eat || function(str) {\\r\\n        var self = this\\r\\n        var fn = function() {\\r\\n            setTimeout(function() {\\r\\n                console.log('eat ' + str)\\r\\n                self.next()\\r\\n            }, 0)\\r\\n        }\\r\\n        this.tasks.push(fn)\\r\\n        return this\\r\\n    }\\r\\n    _LazyMan.prototype.sleep = _LazyMan.prototype.sleep || function(time) {\\r\\n        var self = this\\r\\n        var fn = function() {\\r\\n            setTimeout(function() {\\r\\n                console.log('wake up after ' + time + 's...')\\r\\n                self.next()\\r\\n            }, time * 1000)\\r\\n        }\\r\\n        this.tasks.push(fn)\\r\\n        return this\\r\\n    }\\r\\n    _LazyMan.prototype.sleepFirst = _LazyMan.prototype.sleepFirst || function(time) {\\r\\n        var self = this\\r\\n        var fn = function() {\\r\\n            setTimeout(function() {\\r\\n                console.log('wake up after ' + time +'s...')\\r\\n                self.next()\\r\\n            }, time * 1000)\\r\\n        }\\r\\n        this.tasks.unshift(fn)\\r\\n        return this\\r\\n    }\\r\\n    var LazyMan = function(name) {\\r\\n        return new _LazyMan(name)\\r\\n    }\\r\\n    \")])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_vue-loader@11.3.4@vue-loader/lib/template-compiler?{\"id\":\"data-v-5311f22c\"}!./~/_vue-loader@11.3.4@vue-loader/lib/selector.js?type=template&index=0!./src/views/articles/interview.vue\n// module id = 80\n// module chunks = 14"],"sourceRoot":""}